name: Build & Test Action

on:
  pull_request:
  push:
    branches:
      - main
      - ci
      - 'releases/*'

jobs:
  # Test and check build errors
  test-build:
    name: Run tests and build Action
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: npm install
    - run: npm run all

  # Run this Action with all functioning LLVM versions, in all OS, and build a simple STM32 project
  test-all-releases:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        release:
          - 'latest'
          - '16.0.0'
          - '17.0.1'
    name: Test ${{ matrix.release }} @ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: "actions/github-script@v6"
      with:
        script: |
          const script = require("./setup.js")
          script.run()
    - name: Set up LLVM Embedded Toolchain for Arm
      uses: ./
      with:
        release: ${{ matrix.release }}
    - name: Print out programs invoked by the compiler
      run: clang -v
    - name: Print out version
      run: clang --version
    - name: Check the version matches
      if: matrix.release != 'latest'
      run: clang --version | grep -q ${{ matrix.release }}
# TODO: get a compiling example
    # - name: Clone STM32 project
    #   uses: actions/checkout@v3
    #   with:
    #     repository: 'trebisky/stm32f103'
    #     ref: 7cfe5feaf02c653352331374d2ad178eb04efde7
    #     path: 'stm32f103/'
    # - name: Build simple blinky project
    #   working-directory: ./stm32f103/blink1/
    #   run: make all

  # Check Action env var path
  test-exports:
    name: Test path output and env var
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - uses: "actions/github-script@v6"
      with:
        script: |
          const script = require("./setup.js")
          script.run()
    - name: Set up LLVM Embedded Toolchain for Arm with environmental variable
      id: action-under-test-id
      uses: ./
      with:
        release: '16.0.0'
        path-env-var: LLVM_ARM_PATH
        toolchain-env-var: LLVM_ARM_TOOLCHAIN
    - name: Print out version
      run: clang --version
    - name: Check the version matches
      run: clang --version | grep -q 16.0.0
    - name: Print path via env var and output
      run: |
        echo "outputs.toolchain -> ${{ steps.action-under-test-id.outputs.toolchain }} \n env var -> $LLVM_ARM_TOOLCHAIN"
        echo "outputs.path -> ${{ steps.action-under-test-id.outputs.path }} \n env var -> $LLVM_ARM_PATH"
    - name: Check env var path is correct
      run: echo "Path $LLVM_ARM_PATH" | grep -q /home/runner/llvm-embedded-toolchain-for-arm-16.0.0-linux/LLVMEmbeddedToolchainForArm-16.0.0-Linux-x86_64/bin
    - name: Check output path is correct
      run: echo "Path ${{ steps.action-under-test-id.outputs.path }}" | grep -q /home/runner/llvm-embedded-toolchain-for-arm-16.0.0-linux/LLVMEmbeddedToolchainForArm-16.0.0-Linux-x86_64/bin
    - name: Check env var toolchain is correct
      run: echo "Path $LLVM_ARM_TOOLCHAIN" | grep -q /home/runner/llvm-embedded-toolchain-for-arm-16.0.0-linux/LLVMEmbeddedToolchainForArm-16.0.0-Linux-x86_64
    - name: Check output toolchain is correct
      run: echo "Path ${{ steps.action-under-test-id.outputs.toolchain }}" | grep -q /home/runner/llvm-embedded-toolchain-for-arm-16.0.0-linux/LLVMEmbeddedToolchainForArm-16.0.0-Linux-x86_64


  # Run Action without inputs
  test-default:
    name: Test default options
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - uses: "actions/github-script@v6"
      with:
        script: |
          const script = require("./setup.js")
          script.run()
    - name: Set up LLVM Embedded Toolchain for Arm with default options
      uses: ./
      id: action-under-test-id
    - name: Print out version
      run: clang --version
    - name: Check the version matches
      run: clang --version | grep -q 17.0.1
    - name: Check output path is correct
      run: echo "${{ steps.action-under-test-id.outputs.path }}" | grep -q /home/runner/llvm-embedded-toolchain-for-arm-17.0.1-linux/LLVMEmbeddedToolchainForArm-17.0.1-Linux-x86_64/bin
    - name: Check output toolchain is correct
      run: echo "${{ steps.action-under-test-id.outputs.toolchain }}" | grep -q /home/runner/llvm-embedded-toolchain-for-arm-17.0.1-linux/LLVMEmbeddedToolchainForArm-17.0.1-Linux-x86_64